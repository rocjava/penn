<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/context
     			http://www.springframework.org/schema/context/spring-context-3.0.xsd
     			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<context:component-scan base-package="our.lawyer.back.*.controller" />

	<context:component-scan base-package="com.*.service.impl" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
	</context:component-scan>
	
	<bean id="basePropertyPlaceHolder"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/properties/jdbc.properties</value>
				<value>classpath*:/properties/memcached.properties</value>
			</list>
		</property>
	</bean>


	<!-- masterDataSource -->
	<bean id="masterDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${mysql.driverClassName}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
	</bean>
	
	
	<!-- slaveDataSource -->
	<bean id="slaveDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${slave.mysql.driverClassName}" />
		<property name="url" value="${slave.mysql.url}" />
		<property name="username" value="${slave.mysql.username}" />
		<property name="password" value="${slave.mysql.password}" />
	</bean>
	
	
	<!-- baseDataSource -->
	<bean id="baseDataSource" class="com.penn.anotation.DynamicDataSource">
		<property name="targetDataSources">  
              <map key-type="java.lang.String">  
                  <!-- write -->
                 <entry key="write" value-ref="masterDataSource"/>  
                 <!-- read -->
                 <entry key="read" value-ref="slaveDataSource"/>  
              </map>  
              
        </property>  
        <property name="defaultTargetDataSource" ref="masterDataSource"/> 
	</bean>

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="baseDataSource" />
		<property name="configLocation" value="classpath:/config/mybatis-configuration.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/lawyer/core/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- mysql数据源的sqlSessionTemplate配置 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.*.core.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- define the TransactionManager -->
	<bean id="txManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="baseDataSource" />
	</bean>

	<!-- 配置数据库注解aop -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <bean id="manyDataSourceAspect" class="com.penn.anotation.DataSourceAspect" />
    <aop:config>
        <aop:aspect id="c" ref="manyDataSourceAspect">
            <aop:pointcut id="tx" expression="execution(* com.*.mapper.*.*(..))"/>
            <aop:before pointcut-ref="tx" method="before"/>
        </aop:aspect>
    </aop:config>

    <!-- memcached -->
    <bean id="commMemcachedClientBuilder" class="com.penn.memcached.CommMemcachedClientBuilder">
	    <property name="servers" value="${memcached.server}"/>
	</bean>
	<bean id="commMemcachedClient" factory-bean="commMemcachedClientBuilder" factory-method="build" destroy-method="shutdown"/>


</beans>